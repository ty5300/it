package com.gilbut.chapter1;

import java.util.ArrayList;

public class kosta_200413 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		findN();
//		getCharString();
//		stringSplitParseInt();
//		stringS(); // 복습한 것 지우기.
//		guguDan();
//		makingStar();
//		test(10);
//		K();
	}

	static void K() {
		
		ArrayList<int[]> list2 = new ArrayList<int[]>(4);
		list2 = new ArrayList<int[]>(3);
		
		list2.add(new int[3]);
		System.out.println(list2.get(0)[0]);
				
		
		
		int[] array_int = new int[10];
		ArrayList<Integer> list = new ArrayList<Integer>();
		list.add(10);
		list.add(20);
		list.add(30);
		list.add(40);
		list.add(50);
//		ArrayList<String> list = new ArrayList<String>();
//		list.add("A");
//		list.add("B");
//		list.add("C");

		System.out.println(list.size());
		int k = list.size();
		for(int i = 0 ; i < k  ; i++) {
//			System.out.println(list.get(0));
			System.out.println(i + "번째 : " +list.remove(0) + " - 제거 완료");
			System.out.println("                     size : "+ list.size());
		}
		
//		for(int i = 0; i < list.size();    ) {   // 점증값 없애면 계속 i=0 
////			System.out.println(list.get(0));
//			System.out.println(i + "번째 " +list.remove(0) + " - 제거 완료");
//		}

//		for(int i = list.size(); i > 0 ; i--) {
////			System.out.println(list.get(0));
//			System.out.println(i + "번째 " +list.remove(0) + " - 제거 완료");
//		}
//		
		System.out.println();
		System.out.println("list.size() : "+list.size());
//		System.out.println(list.get(0));

	}	
			
//	test(10); 재귀함수.
	static void test(int c) {	
		System.out.println(c);
		if (c-- > 0) {
			test(c); 
			return ;
		} 
	}
	
	
	
	static void makingStar() {
		int k = 6;
		
		System.out.println();
		for (int i = 1; i < k; i++) {
			for (int j = k; j > 1; j--) 
				System.out.printf("* ");
			System.out.println();
			}
		
		
		System.out.println();
		for (int i = 1; i < k; i++) {
			for (int j = 1; j <= k-i; j++) 
				System.out.printf("* ");
			System.out.println();
			}

		System.out.println();
		for (int i = 1; i < k; i++) {
			for (int j = k-i; j > 0; j--) {
				System.out.print("* ");
			}System.out.println();
				
		}
		

		
		System.out.println();
		for (int i = 1; i < k; i++) {
			for (int j = 1; j < k; j++) 
				if (j<k-i)	System.out.printf("  ");
				else System.out.printf("* ");
			System.out.println();
			}
		

		
		System.out.println();
		for (int i = 1; i < k; i++) {
			for (int j = 1; j < k; j++) 
				if (j>=i) System.out.printf(" *");
				else System.out.printf("  ");
			System.out.println();
			}
		
	}
	
	static void guguDan() {
		for (int i = 2; i < 10; i++) {
			for (int j = 1; j < 10; j++) {
				System.out.printf("%4d", i*j);
			}System.out.println();
		}
	}
		
	

	static void stringSplitParseInt() {
		String text = "hello=2;world=3;test=5;counts=7";
		String[] n_text = text.split(";");
//		System.out.println(n_text.length);
		for (int i =0; i < n_text.length; i++) {
//			System.out.println(n_text[i].charAt(n_text[i].length()-1));
			
			int n = Integer.parseInt(n_text[i].charAt(  n_text[i].length()-1 )+"");
			//---charAt은 1개 문자만 추출하는데, parseInt는 String만 받으니까 +"" 해주면 문자'열'이 된다.---//
//			System.out.println(n*10);
//			System.out.println(n_text[i].indexOf("=")); 
			int ni = Integer.parseInt(n_text[i].indexOf("=")+"");    
			//--- n_text[i].indexOf("=")  해당 문자열에서 "="의 인덱스를 반환 ---//
			//--- Integer.parseInt --- 문자열을 (not char) 정수로 반환 ---//
			//--- n_text[i].indexOf("=") 는 문자? 문자열? --- 문자! +"" 해줘야 한다. ---//
//			System.out.println(" "+ni);
			
			
			System.out.println(n_text[i].charAt(ni+1));
		}
//		NumberFormat f = NumberFormat.getInstance();
//		f.setGroupingUsed(false);
//		double double1 = Double.parseDouble("422919819819889189.3");
//		System.out.println(f.format(double1));
//		
//		String v1 = "482811884";
//		import java.math.BigDecimal
//		BigDecimal bigNumber = new BigDecimal("10000.12345");
//		
//		
		
		
	}
	
	
	
	
	
	
	static void findN() {
		//--- QUIZ : 각 글자가 중복되는 횟수 세기.(주의 - 이중 카운팅)
//		String text0 = "위키백과는 종이 기반 참고 자료와는 아주 다르게 실시간으로 함께 편집합니다. 위키백과는 끊임없이 새로 만들어지고 갱신되므로 역사적 사건에 관한 항목은 수분 내에 생성됩니다. 반면에 종이 기반 백과사전에서는 이와 같은 과정이 수개월이나 수년이 걸립니다. 오래 전에 생성된 항목은 시간이 가면서 점점 더 일반화되고 중립적 시각으로 변합니다. 새로 만들어진 항목은 잘못된 정보, 백과사전에 싣기에 부적절한 내용 또는 문서를 훼손하는 내용을 포함할 수 있습니다. 이 점을 주의하면 유용한 정보를 취하고 잘못된 정보를 피하는 데 도움이 됩니다.";
		String text0 = "위키백과는 키백과는 백과는 과은 은";

		String text = text0.trim(); // [0], [-1]번째 공백 삭제 기능
//		text = text.replace(" ", "");
		
		char[] textCharArray = text.toCharArray();
		System.out.println("전체 문자열 : "+textCharArray.length+"\n");
		for(int i = 0 ; i < textCharArray.length; i++) {
//			System.out.println(textCharArray[i]);
		}
		
		String[] ts = new String[text0.length()];
		for (int i = 0; i < text0.length(); i++) {
			ts[i] = text0.charAt(i)+""; 
			// String = char + "" : char + "" 는 String !!! 
//			System.out.println(ts[i]);
		}
		char[] ts2 = text0.toCharArray();
		for (int i = 0; i < text0.length(); i++) {
//			System.out.println(ts2[i]);
		}

		//--- char to string---//
		String charToString = "";
		for ( int i = 0; i < ts.length; i++) {
			charToString = charToString + ts[i];
		}System.out.print("char의 재결합 : "+charToString);
		
		//--- QUIZ : '은', '는' 몇 번 들어가니? ---// 		
		int num = 0;
		for ( int i = 0; i < ts.length; i++) {
			if (ts2[i] == '은' ||  ts2[i] == '는') num++; 
		}
		System.out.println("\n\n '은', '는' 갯수는 "+num+"번 됩니다.");
		
		//--- QUIZ : 중복되는 경우마다 해당 글자 출력(중복에 주의할 것) ---//
		//  "위키백과는 키백과는 백과는 과은 은"
		int k = 0 ; 
		for ( int i = 0; i < ts2.length-1; i++) {
			for ( int j = i+1; j < ts2.length; j++) {
				if (ts2[i] == ts2[j] ) {
					ts2[j] = ' ';                 // 중복 카운팅을 막는 트릭.
					
					if (ts2[i] != ' ') {
						System.out.println(ts2[i]);
						k++;						
					}

				}
			}
		}
		System.out.println("각 글자 마다 총 중복 횟수는 "+k+"번 됩니다.");
		
		
//		String tt = "hello";
//		char c2 = tt.charAt(0);
//		
//		
//		String a = "스트링 "; String b= "결합";
//		String c =  a+b;;
//		System.out.println("\n\n\n c : "+c);
	}
	



	}

